// DFS SOLUTION

class Solution {
public:
    
    int dfs(int i, int j, int n, int m, vector<vector<int>>& grid){
        
         if (i < 0 || j < 0 || i >= n || j >= m || !grid[i][j]) 
             return 0;
        
        grid[i][j] = 0;
        
        return 1 + dfs(i-1, j,n,m, grid) + dfs(i, j-1, n,m, grid) + dfs(i+1, j, n,m, grid) + dfs(i, j+1, n,m, grid);
    }
    
    int maxAreaOfIsland(vector<vector<int>>& mat) {
         int ans = 0;
        
        int N = mat.size();
        int M = mat[0].size();
    
        for(int i = 0; i < N; i++)
        {
            for(int j = 0; j < M; j++)
            {
                if(mat[i][j])
                {  
                    ans = max(ans, dfs(i,j,N,M,mat));
                }
            }
        }
        
        return ans;
    }
};
